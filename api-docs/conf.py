<<<<<<< HEAD
# coding=utf-8
# Copyright 2018-2022 EVA
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# -- Path setup --------------------------------------------------------------

import os
import sys
import warnings

# If extensions (or modules to document with autodoc) are in another directory,
# add these directories to sys.path here. If the directory is relative to the
# documentation root, use os.path.abspath to make it absolute, like shown here.
#
from datetime import datetime

from eva.version import VERSION as version

sys.path.append(os.path.abspath("."))
sys.path.append(os.path.abspath("../"))


# Temp. workaround for
# https://github.com/agronholm/sphinx-autodoc-typehints/issues/133
warnings.filterwarnings(
    "ignore", message="sphinx.util.inspect.Signature() is deprecated"
)


# -- Project information -----------------------------------------------------
project = "evadb"
author = "Georgia Tech Database Group"
copyright = str(datetime.now().year) + f", {author}"

# The full version, including alpha/beta/rc tags
release = version

master_doc = "index"
=======
# -*- coding: utf-8 -*-
import os
import sys
import warnings
from datetime import date

sys.path.insert(0, os.path.abspath(".."))

# -- Global variables

# The full version, including alpha/beta/rc tags
VERSION_DICT = {}
with open("../eva/version.py", "r") as version_file:
    exec(version_file.read(), VERSION_DICT)
>>>>>>> 765cef70afcf21336b68936d4651e153026d2c91

# Set the latest version.
LATEST_VERSION = VERSION_DICT["VERSION"]

# -- General configuration ------------------------------------------------

# Add any Sphinx extension module names here, as strings.
extensions = [
<<<<<<< HEAD
    "sphinx_external_toc",
    "sphinx.ext.autosummary",
    "sphinx.ext.autodoc",
    "sphinx.ext.doctest",
    "sphinx.ext.intersphinx",
    "sphinx.ext.todo",
    "sphinx.ext.mathjax",
    "sphinx.ext.viewcode",
    "sphinx.ext.napoleon",
    "sphinx.ext.graphviz",
    "myst_nb",
    "sphinx-jsonschema",
]

myst_enable_extensions = [
    "dollarmath",
    "amsmath",
    "deflist",
    "html_admonition",
    "html_image",
    "colon_fence",
    "smartquotes",
    "replacements",
=======
    "sphinx.ext.autodoc",
    "sphinx.ext.todo",
    "sphinx.ext.mathjax",
    "sphinx.ext.githubpages",
    "sphinx.ext.extlinks",
    "sphinx_sitemap",
    "recommonmark",  # optional
    "sphinx_external_toc"
>>>>>>> 765cef70afcf21336b68936d4651e153026d2c91
]

# The suffix(es) of source filenames.
source_suffix = [".rst", ".md"]

# The master toctree document.
master_doc = "index"

<<<<<<< HEAD
# Remove 'view source code' from top of page (for html, not python)
html_show_sourcelink = False
# If no class summary, inherit base class summary
autodoc_inherit_docstrings = False
numpydoc_show_class_members = False


# Add any paths that contain templates here, relative to this directory.
templates_path = ["_templates"]

# List of patterns, relative to source directory, that match files and
# directories to ignore when looking for source files.
# This pattern also affects html_static_path and html_extra_path.
exclude_patterns = ["_build", "Thumbs.db", ".DS_Store"]


# The name of the Pygments (syntax highlighting) style to use.
pygments_style = "sphinx"
=======
# General information about the project.
project = "EVA Video Database System"
copyright = str(date.today().year) + ", Georgia Tech Database Group."
author = u"Georgia Tech Database Group"

# List of patterns, relative to source directory, that match files and
# directories to ignore when looking for source files.
exclude_patterns = ["_build", "Thumbs.db", ".DS_Store"]

# The name of the Pygments (syntax highlighting) style to use.
pygments_style = "sphinx"

# List of substitutions
rst_prolog = """
.. |rst| replace:: restructuredText
"""
# -- Options for not found extension ---------------------------------------
>>>>>>> 765cef70afcf21336b68936d4651e153026d2c91

# Template used to render the 404.html generated by this extension.
notfound_template = "404.html"

# Prefix added to all the URLs generated in the 404 page.
notfound_urls_prefix = ""

<<<<<<< HEAD
autodoc_mock_imports = [
    "numpy",
    "sqlalchemy",
    "sqlalchemy_utils",
    "sqlalchemy.orm",
    "sqlalchemy.orm.exc",
    "sqlalchemy.types",
    "petastorm",
    "yaml",
    "pyspark",
    "torch",
    "pandas",
    "cv2",
    "eva.catalog",
]
=======
# -- Options for HTML output ----------------------------------------------
>>>>>>> 765cef70afcf21336b68936d4651e153026d2c91

# The theme to use for pages.
html_theme = "furo"
#html_theme_path = ["themes"]


# Theme options are theme-specific and customize the look and feel of a theme
# further.  For a list of options available for the theme, see the
# documentation.
html_theme_options = {
<<<<<<< HEAD
    "repository_url": "https://github.com/georgia-tech-db/Eva",
    "use_repository_button": True,
    "use_issues_button": True,
    "use_edit_page_button": True,
    "path_to_docs": "api-docs/",
    "home_page_in_toc": False,
=======
    "sidebar_hide_name": True,
    "navigation_with_keys": True,
    "top_of_page_button": "edit",
>>>>>>> 765cef70afcf21336b68936d4651e153026d2c91
}

external_toc_path = "_toc.yml"  # optional, default: _toc.yml
external_toc_exclude_missing = False  # optional, default: False

html_logo = "_static/mascots/Logo.png"

<<<<<<< HEAD
# Add any paths that contain custom static files (such as style sheets) here,
# relative to this directory. They are copied after the builtin static files,
# so a file named "default.css" will overwrite the builtin "default.css".
html_static_path = ["_static"]

autodoc_default_flags = [
    "members",
    "private-members",
    "special-members",
    # 'undoc-members',
    "show-inheritance",
]


def autodoc_skip_member(app, what, name, obj, skip, options):
    # Ref: https://stackoverflow.com/a/21449475/
    exclusions = (
        "__weakref__",  # special-members
        "__doc__",
        "__module__",
        "__dict__",  # undoc-members
    )
    exclude = name in exclusions
    return True if exclude else None
=======
html_sidebars = {
    "**": [
        "sidebar/scroll-start.html",
        "sidebar/brand.html",
        "sidebar/search.html",
        "sidebar/navigation.html",
        "sidebar/scroll-end.html",
    ]
}
>>>>>>> 765cef70afcf21336b68936d4651e153026d2c91

# -- Initialize Sphinx ----------------------------------------------
def setup(sphinx):
    warnings.filterwarnings(
        action="ignore",
        category=UserWarning,
        message=r".*Container node skipped.*",
    )

<<<<<<< HEAD
def setup(app):
    app.connect("autodoc-skip-member", autodoc_skip_member)
    app.add_css_file("custom.css")
=======
>>>>>>> 765cef70afcf21336b68936d4651e153026d2c91
